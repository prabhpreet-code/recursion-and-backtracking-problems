#include <iostream>
#include<cmath>
#include<bitset>
using namespace std;

bitset<30> col , d1 , d2 ;


void solvenQueen(int nQueen[][10],int r,int n , int &an){
    //base case
    if(r==n){
        an++ ;
        cout<<endl ;
        cout<<endl ;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                cout<<nQueen[i][j]<<" ";
            }
            cout<<endl;
        }
     
     return ;
    }
    
     for(int c=0;c<n;c++)
     {
        if ((!col[c]) && (!d1[r-c+n-1]) && (!d2[r+c]))
        {
            col[c]= d1[r-c+n-1] = d2[r+c]= nQueen[r][c] =1 ;
            solvenQueen(nQueen , r+1 ,n , an ) ;
            col[c]= d1[r-c+n-1] = d2[r+c]=nQueen[r][c] =0 ;
            
        }
        
           }
    
    return;
   
    
}

int main() {
    int n;
    cin>>n;
    int nQueen[10][10] = {0};
    int ans = 0 ;
    solvenQueen(nQueen,0,n , ans);
    cout<<endl<<ans ;
    return 0;
}
